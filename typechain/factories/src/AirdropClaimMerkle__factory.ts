/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BytesLike,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  AirdropClaimMerkle,
  AirdropClaimMerkleInterface,
} from "../../src/AirdropClaimMerkle";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_tokenERC20",
        type: "address",
      },
      {
        internalType: "contract ERC721",
        name: "_tokenERC721",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_merkleRootERC20",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_merkleRootERC721",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AirdropClaimMerkle_AlreadyClaimed",
    type: "error",
  },
  {
    inputs: [],
    name: "AirdropClaimMerkle_NotInMerkle",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadyInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "NewOwnerIsZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NoHandoverRequest",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ClaimedERC20",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ClaimedERC721",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pendingOwner",
        type: "address",
      },
    ],
    name: "OwnershipHandoverCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pendingOwner",
        type: "address",
      },
    ],
    name: "OwnershipHandoverRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "cancelOwnershipHandover",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
    ],
    name: "claimERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
    ],
    name: "claimERC721",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pendingOwner",
        type: "address",
      },
    ],
    name: "completeOwnershipHandover",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc721",
    outputs: [
      {
        internalType: "contract ERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasClaimed_erc20",
    outputs: [
      {
        internalType: "bool",
        name: "claimed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasClaimed_erc721",
    outputs: [
      {
        internalType: "bool",
        name: "claimed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot_erc20",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot_erc721",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "result",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pendingOwner",
        type: "address",
      },
    ],
    name: "ownershipHandoverExpiresAt",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "requestOwnershipHandover",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051610a33380380610a3383398101604081905261002f916100cd565b600080546001600160a01b038087166001600160a01b0319928316179092556001805492861692909116919091179055608082905260a08190526100723361007b565b50505050610115565b6001600160a01b0316638b78c6d8198190558060007f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a35b50565b6001600160a01b03811681146100b557600080fd5b600080600080608085870312156100e357600080fd5b84516100ee816100b8565b60208601519094506100ff816100b8565b6040860151606090960151949790965092505050565b60805160a0516108eb610148600039600081816101900152610577015260008181610149015261038001526108eb6000f3fe6080604052600436106100e85760003560e01c8063785e9e861161008a578063f04e283e11610059578063f04e283e14610273578063f2fde38b14610286578063f5d0b80014610299578063fee81cf4146102c957600080fd5b8063785e9e86146101c25780638da5cb5b146101fa578063bca6ce6414610213578063cd34d4c01461023357600080fd5b806344c5a9e8116100c657806344c5a9e814610137578063462c39821461017e57806354d1f13d146101b2578063715018a6146101ba57600080fd5b80630e202999146100ed578063256929621461010f5780633ac25d1c14610117575b600080fd5b3480156100f957600080fd5b5061010d6101083660046107e7565b6102fc565b005b61010d6104a3565b34801561012357600080fd5b5061010d6101323660046107e7565b6104f3565b34801561014357600080fd5b5061016b7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b34801561018a57600080fd5b5061016b7f000000000000000000000000000000000000000000000000000000000000000081565b61010d610681565b61010d6106bd565b3480156101ce57600080fd5b506000546101e2906001600160a01b031681565b6040516001600160a01b039091168152602001610175565b34801561020657600080fd5b50638b78c6d819546101e2565b34801561021f57600080fd5b506001546101e2906001600160a01b031681565b34801561023f57600080fd5b5061026361024e366004610871565b60026020526000908152604090205460ff1681565b6040519015158152602001610175565b61010d610281366004610871565b6106d1565b61010d610294366004610871565b610711565b3480156102a557600080fd5b506102636102b4366004610871565b60036020526000908152604090205460ff1681565b3480156102d557600080fd5b5061016b6102e4366004610871565b63389a75e1600c908152600091909152602090205490565b6001600160a01b03841660009081526002602052604090205460ff16156103365760405163b7671e7d60e01b815260040160405180910390fd5b6040516bffffffffffffffffffffffff19606086901b1660208201526034810184905260009060540160405160208183030381529060405280519060200120905060006103a584847f000000000000000000000000000000000000000000000000000000000000000085610738565b9050806103c557604051630d7b8da960e41b815260040160405180910390fd5b6001600160a01b03868116600081815260026020526040808220805460ff191660011790559054905163a9059cbb60e01b81526004810192909252602482018890529091169063a9059cbb906044016020604051808303816000875af1158015610433573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104579190610893565b50856001600160a01b03167fc738b2de230010873d5b81370b4c10250e8eaec27550f0c43faf979e093090838660405161049391815260200190565b60405180910390a2505050505050565b60006202a30067ffffffffffffffff164201905063389a75e1600c5233600052806020600c2055337fdbf36a107da19e49527a7176a1babf963b4b0ff8cde35ee35d6cd8f1f9ac7e1d600080a250565b6001600160a01b03841660009081526003602052604090205460ff161561052d5760405163b7671e7d60e01b815260040160405180910390fd5b6040516bffffffffffffffffffffffff19606086901b16602082015260348101849052600090605401604051602081830303815290604052805190602001209050600061059c84847f000000000000000000000000000000000000000000000000000000000000000085610738565b9050806105bc57604051630d7b8da960e41b815260040160405180910390fd5b6001600160a01b0386811660008181526003602052604090819020805460ff191660019081179091555490516323b872dd60e01b8152306004820152602481019290925260448201889052909116906323b872dd90606401600060405180830381600087803b15801561062e57600080fd5b505af1158015610642573d6000803e3d6000fd5b50505050856001600160a01b03167f81b2ae614b1876f030c9dab3e9d8301926fbb2baba7dd8169b7ea149acc1b72a8660405161049391815260200190565b63389a75e1600c523360005260006020600c2055337ffa7b8eab7da67f412cc9575ed43464468f9bfbae89d1675917346ca6d8fe3c92600080a2565b6106c5610772565b6106cf600061078d565b565b6106d9610772565b63389a75e1600c52806000526020600c20805442111561070157636f5e88186000526004601cfd5b6000905561070e8161078d565b50565b610719610772565b8060601b61072f57637448fbae6000526004601cfd5b61070e8161078d565b6000831561076a578360051b8501855b803580851160051b948552602094851852604060002093018181106107485750505b501492915050565b638b78c6d8195433146106cf576382b429006000526004601cfd5b638b78c6d81980546001600160a01b039092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a355565b80356001600160a01b03811681146107e257600080fd5b919050565b600080600080606085870312156107fd57600080fd5b610806856107cb565b935060208501359250604085013567ffffffffffffffff8082111561082a57600080fd5b818701915087601f83011261083e57600080fd5b81358181111561084d57600080fd5b8860208260051b850101111561086257600080fd5b95989497505060200194505050565b60006020828403121561088357600080fd5b61088c826107cb565b9392505050565b6000602082840312156108a557600080fd5b8151801515811461088c57600080fdfea2646970667358221220a654143e117dbae348f102f1bc1e7331185b60105e8e2f82c26a07d4c7f8373664736f6c63430008140033";

type AirdropClaimMerkleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AirdropClaimMerkleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AirdropClaimMerkle__factory extends ContractFactory {
  constructor(...args: AirdropClaimMerkleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _tokenERC20: AddressLike,
    _tokenERC721: AddressLike,
    _merkleRootERC20: BytesLike,
    _merkleRootERC721: BytesLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _tokenERC20,
      _tokenERC721,
      _merkleRootERC20,
      _merkleRootERC721,
      overrides || {}
    );
  }
  override deploy(
    _tokenERC20: AddressLike,
    _tokenERC721: AddressLike,
    _merkleRootERC20: BytesLike,
    _merkleRootERC721: BytesLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _tokenERC20,
      _tokenERC721,
      _merkleRootERC20,
      _merkleRootERC721,
      overrides || {}
    ) as Promise<
      AirdropClaimMerkle & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AirdropClaimMerkle__factory {
    return super.connect(runner) as AirdropClaimMerkle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AirdropClaimMerkleInterface {
    return new Interface(_abi) as AirdropClaimMerkleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AirdropClaimMerkle {
    return new Contract(address, _abi, runner) as unknown as AirdropClaimMerkle;
  }
}
