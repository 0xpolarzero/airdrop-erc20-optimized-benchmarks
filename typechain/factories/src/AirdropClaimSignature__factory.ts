/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  AirdropClaimSignature,
  AirdropClaimSignatureInterface,
} from "../../src/AirdropClaimSignature";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_tokenERC20",
        type: "address",
      },
      {
        internalType: "contract ERC721",
        name: "_tokenERC721",
        type: "address",
      },
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AirdropClaimSignature_AlreadyClaimed",
    type: "error",
  },
  {
    inputs: [],
    name: "AirdropClaimSignature_InvalidSignature",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadyInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "NewOwnerIsZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NoHandoverRequest",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ClaimedERC20",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ClaimedERC721",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pendingOwner",
        type: "address",
      },
    ],
    name: "OwnershipHandoverCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pendingOwner",
        type: "address",
      },
    ],
    name: "OwnershipHandoverRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "cancelOwnershipHandover",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "claimERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "claimERC721",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pendingOwner",
        type: "address",
      },
    ],
    name: "completeOwnershipHandover",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc721",
    outputs: [
      {
        internalType: "contract ERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasClaimed_erc20",
    outputs: [
      {
        internalType: "bool",
        name: "claimed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasClaimed_erc721",
    outputs: [
      {
        internalType: "bool",
        name: "claimed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "result",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pendingOwner",
        type: "address",
      },
    ],
    name: "ownershipHandoverExpiresAt",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "requestOwnershipHandover",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "signer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610a6f380380610a6f83398101604081905261002f916100c5565b600080546001600160a01b038086166001600160a01b031992831617909255600180548584169216919091179055811660805261006b33610073565b505050610112565b6001600160a01b0316638b78c6d8198190558060007f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a35b50565b6001600160a01b03811681146100ad57600080fd5b6000806000606084860312156100da57600080fd5b83516100e5816100b0565b60208501519093506100f6816100b0565b6040850151909250610107816100b0565b809150509250925092565b60805161093461013b6000396000818161011501528181610374015261055c01526109346000f3fe6080604052600436106100dc5760003560e01c80638da5cb5b1161007f578063f04e283e11610059578063f04e283e14610225578063f2fde38b14610238578063f5d0b8001461024b578063fee81cf41461027b57600080fd5b80638da5cb5b146101ac578063bca6ce64146101c5578063cd34d4c0146101e557600080fd5b80633f205355116100bb5780633f2053551461015c57806354d1f13d1461017c578063715018a614610184578063785e9e861461018c57600080fd5b80627ae0c8146100e1578063238ac933146101035780632569296214610154575b600080fd5b3480156100ed57600080fd5b506101016100fc366004610833565b6102bc565b005b34801561010f57600080fd5b506101377f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b610101610498565b34801561016857600080fd5b50610101610177366004610833565b6104e8565b61010161067a565b6101016106b6565b34801561019857600080fd5b50600054610137906001600160a01b031681565b3480156101b857600080fd5b50638b78c6d81954610137565b3480156101d157600080fd5b50600154610137906001600160a01b031681565b3480156101f157600080fd5b506102156102003660046108ba565b60026020526000908152604090205460ff1681565b604051901515815260200161014b565b6101016102333660046108ba565b6106ca565b6101016102463660046108ba565b61070a565b34801561025757600080fd5b506102156102663660046108ba565b60036020526000908152604090205460ff1681565b34801561028757600080fd5b506102ae6102963660046108ba565b63389a75e1600c908152600091909152602090205490565b60405190815260200161014b565b6001600160a01b03841660009081526003602052604090205460ff16156102f657604051635ff2ff4960e11b815260040160405180910390fd5b6040516bffffffffffffffffffffffff19606086901b1660208201526034810184905260009061037090610369906054015b604051602081830303815290604052805190602001206020527b19457468657265756d205369676e6564204d6573736167653a0a3332600052603c60042090565b8484610731565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b0316146103c457604051631f142a6b60e11b815260040160405180910390fd5b6001600160a01b0385811660008181526003602052604090819020805460ff191660019081179091555490516323b872dd60e01b8152306004820152602481019290925260448201879052909116906323b872dd90606401600060405180830381600087803b15801561043657600080fd5b505af115801561044a573d6000803e3d6000fd5b50505050846001600160a01b03167f81b2ae614b1876f030c9dab3e9d8301926fbb2baba7dd8169b7ea149acc1b72a8560405161048991815260200190565b60405180910390a25050505050565b60006202a30067ffffffffffffffff164201905063389a75e1600c5233600052806020600c2055337fdbf36a107da19e49527a7176a1babf963b4b0ff8cde35ee35d6cd8f1f9ac7e1d600080a250565b6001600160a01b03841660009081526002602052604090205460ff161561052257604051635ff2ff4960e11b815260040160405180910390fd5b6040516bffffffffffffffffffffffff19606086901b166020820152603481018490526000906105589061036990605401610328565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b0316146105ac57604051631f142a6b60e11b815260040160405180910390fd5b6001600160a01b03858116600081815260026020526040808220805460ff191660011790559054905163a9059cbb60e01b81526004810192909252602482018790529091169063a9059cbb906044016020604051808303816000875af115801561061a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063e91906108dc565b50846001600160a01b03167fc738b2de230010873d5b81370b4c10250e8eaec27550f0c43faf979e093090838560405161048991815260200190565b63389a75e1600c523360005260006020600c2055337ffa7b8eab7da67f412cc9575ed43464468f9bfbae89d1675917346ca6d8fe3c92600080a2565b6106be6107be565b6106c860006107d9565b565b6106d26107be565b63389a75e1600c52806000526020600c2080544211156106fa57636f5e88186000526004601cfd5b60009055610707816107d9565b50565b6107126107be565b8060601b61072857637448fbae6000526004601cfd5b610707816107d9565b60405160008490526001906040830361076b5760208481013560ff81901c601b0190915284356040526001600160ff1b031660605261078e565b6041830361078957604084013560001a60205260408460403761078e565b600091505b6020600160806000855afa5191503d6107af57638baa579f6000526004601cfd5b60006060526040529392505050565b638b78c6d8195433146106c8576382b429006000526004601cfd5b638b78c6d81980546001600160a01b039092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a355565b80356001600160a01b038116811461082e57600080fd5b919050565b6000806000806060858703121561084957600080fd5b61085285610817565b935060208501359250604085013567ffffffffffffffff8082111561087657600080fd5b818701915087601f83011261088a57600080fd5b81358181111561089957600080fd5b8860208285010111156108ab57600080fd5b95989497505060200194505050565b6000602082840312156108cc57600080fd5b6108d582610817565b9392505050565b6000602082840312156108ee57600080fd5b815180151581146108d557600080fdfea26469706673582212208685d62e77346ceb7a2414a75b1fa8adbb5efa9cec6fde853d6d4dbc3cc4e77764736f6c63430008140033";

type AirdropClaimSignatureConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AirdropClaimSignatureConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AirdropClaimSignature__factory extends ContractFactory {
  constructor(...args: AirdropClaimSignatureConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _tokenERC20: AddressLike,
    _tokenERC721: AddressLike,
    _signer: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _tokenERC20,
      _tokenERC721,
      _signer,
      overrides || {}
    );
  }
  override deploy(
    _tokenERC20: AddressLike,
    _tokenERC721: AddressLike,
    _signer: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _tokenERC20,
      _tokenERC721,
      _signer,
      overrides || {}
    ) as Promise<
      AirdropClaimSignature & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): AirdropClaimSignature__factory {
    return super.connect(runner) as AirdropClaimSignature__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AirdropClaimSignatureInterface {
    return new Interface(_abi) as AirdropClaimSignatureInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AirdropClaimSignature {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as AirdropClaimSignature;
  }
}
