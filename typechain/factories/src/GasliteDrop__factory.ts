/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { GasliteDrop, GasliteDropInterface } from "../../src/GasliteDrop";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_addresses",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_totalAmount",
        type: "uint256",
      },
    ],
    name: "airdropERC20",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_nft",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_addresses",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_tokenIds",
        type: "uint256[]",
      },
    ],
    name: "airdropERC721",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_addresses",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
    ],
    name: "airdropETH",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506103a8806100206000396000f3fe6080604052600436106100345760003560e01c80631d5659fb1461003957806382947abe1461004e578063c1a3800614610061575b600080fd5b61004c6100473660046101fc565b610074565b005b61004c61005c36600461027d565b6100ce565b61004c61006f366004610306565b610150565b82811461008057600080fd5b6323b872dd60e01b600052336004528260051b8401828503855b80356024528181033560445260008060646000808c5af16100ba57600080fd5b60200182811061009a575050505050505050565b8382146100da57600080fd5b6323b872dd60e01b60005233600452306024528060445260008060646000808a5af161010557600080fd5b63a9059cbb60e01b6000528360051b8501838603865b80356004528181033560245260008060646000808d5af161013b57600080fd5b60200182811061011b57505050505050505050565b82811461015c57600080fd5b838360051b81018584035b6000806000808487013587355af161017e57600080fd5b6020830192508282036101675750505050505050565b80356001600160a01b03811681146101ab57600080fd5b919050565b60008083601f8401126101c257600080fd5b50813567ffffffffffffffff8111156101da57600080fd5b6020830191508360208260051b85010111156101f557600080fd5b9250929050565b60008060008060006060868803121561021457600080fd5b61021d86610194565b9450602086013567ffffffffffffffff8082111561023a57600080fd5b61024689838a016101b0565b9096509450604088013591508082111561025f57600080fd5b5061026c888289016101b0565b969995985093965092949392505050565b6000806000806000806080878903121561029657600080fd5b61029f87610194565b9550602087013567ffffffffffffffff808211156102bc57600080fd5b6102c88a838b016101b0565b909750955060408901359150808211156102e157600080fd5b506102ee89828a016101b0565b979a9699509497949695606090950135949350505050565b6000806000806040858703121561031c57600080fd5b843567ffffffffffffffff8082111561033457600080fd5b610340888389016101b0565b9096509450602087013591508082111561035957600080fd5b50610366878288016101b0565b9598949750955050505056fea2646970667358221220c63b6c97ea691c29df1995a2ea5ab91d76da269ab8f919e8f512d21b07317fc064736f6c63430008140033";

type GasliteDropConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GasliteDropConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GasliteDrop__factory extends ContractFactory {
  constructor(...args: GasliteDropConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      GasliteDrop & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): GasliteDrop__factory {
    return super.connect(runner) as GasliteDrop__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GasliteDropInterface {
    return new Interface(_abi) as GasliteDropInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): GasliteDrop {
    return new Contract(address, _abi, runner) as unknown as GasliteDrop;
  }
}
