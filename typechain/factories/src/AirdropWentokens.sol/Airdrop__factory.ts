/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Airdrop,
  AirdropInterface,
} from "../../../src/AirdropWentokens.sol/Airdrop";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_total",
        type: "uint256",
      },
    ],
    name: "airdropERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
    ],
    name: "airdropETH",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506102d7806100206000396000f3fe6080604052600436106100295760003560e01c806382947abe1461002e578063c1a3800614610050575b600080fd5b34801561003a57600080fd5b5061004e61004936600461019e565b610063565b005b61004e61005e366004610235565b610100565b6040516323b872dd60e01b602082018181523360248401523060448401526064928301849052909163a9059cbb60e01b9190600090819083828d5af19050806100ab57600080fd5b506040516020018181528460005b818110156100f357602081028a81013560048501528801356024840152600080604485828f5af1806100ea57600080fd5b506001016100b9565b5050505050505050505050565b60008160005b8181101561013d57602081028781013590860135600080808084865af191508161012f57600080fd5b939093019250600101610106565b505034811461014b57600080fd5b5050505050565b60008083601f84011261016457600080fd5b50813567ffffffffffffffff81111561017c57600080fd5b6020830191508360208260051b850101111561019757600080fd5b9250929050565b600080600080600080608087890312156101b757600080fd5b86356001600160a01b03811681146101ce57600080fd5b9550602087013567ffffffffffffffff808211156101eb57600080fd5b6101f78a838b01610152565b9097509550604089013591508082111561021057600080fd5b5061021d89828a01610152565b979a9699509497949695606090950135949350505050565b6000806000806040858703121561024b57600080fd5b843567ffffffffffffffff8082111561026357600080fd5b61026f88838901610152565b9096509450602087013591508082111561028857600080fd5b5061029587828801610152565b9598949750955050505056fea2646970667358221220906e6e206e21d5af1581b086c195518931b8a16a43e4c1dd9fa4008f8b7230a464736f6c63430008140033";

type AirdropConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AirdropConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Airdrop__factory extends ContractFactory {
  constructor(...args: AirdropConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Airdrop & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Airdrop__factory {
    return super.connect(runner) as Airdrop__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AirdropInterface {
    return new Interface(_abi) as AirdropInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Airdrop {
    return new Contract(address, _abi, runner) as unknown as Airdrop;
  }
}
